name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, windows-latest]
    
    env:
      BOOST_ROOT : "/usr/local/share/boost/1.72.0"

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Boost
      shell: bash
      run: |
        wget https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.tar.gz
        tar zxf boost_1_75_0.tar.gz
        cd boost_1_75_0
        ./bootstrap.sh --prefix=/opt/boost
        ./b2 --with-system cxxflags=-fPIC cflags=-fPIC install

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBOOST_ROOT=/opt/boost -DBoost_USE_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Build Python Package
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --target pypkg --config $BUILD_TYPE
      
    - name: Upload Python Package Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${{github.workspace}}/build/bindings/python/*.tar.gz
        name: artifact_${{ matrix.os }}_${{ matrix.configs }}.tar.gz
